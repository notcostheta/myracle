{
    "image_url": "https://testbucket.s3.ap-south-1.amazonaws.com/description_gLqf6NJ.jpeg",
    "test_cases": [
        {
            "name": "test_search_bus_by_source_destination_date",
            "description": "Verify the user can search for a bus by entering source, destination, and date",
            "code": "```python\ndef test_search_bus_by_source_destination_date(self):\n    \"\"\"Verify the user can search for a bus by entering source, destination, and date\"\"\"\n    self.app.enter_source('Buldhana')\n    self.app.enter_destination('Pune')\n    self.app.select_journey_date('7 Sep')\n    self.app.tap_search_button()\n    assert self.app.is_bus_list_displayed(), 'Bus list should be displayed after search'\n"
        },
        {
            "name": "test_verify_bus_details",
            "description": "Verify that the bus details are displayed correctly",
            "code": "```python\ndef test_verify_bus_details(self):\n    \"\"\"Verify that the bus details are displayed correctly\"\"\"\n    self.app.enter_source('Buldhana')\n    self.app.enter_destination('Pune')\n    self.app.select_journey_date('7 Sep')\n    self.app.tap_search_button()\n    bus_details = self.app.get_bus_details()\n    assert bus_details[0]['departure_time'] == '21:10', 'Departure time should be 21:10'\n    assert bus_details[0]['arrival_time'] == '06:30', 'Arrival time should be 06:30'\n    assert bus_details[0]['travel_time'] == '9h 20m', 'Travel time should be 9h 20m'\n    assert bus_details[0]['seats'] == '07 seats', 'Number of seats should be 07 seats'\n    assert bus_details[0]['single_seats'] == '2 single seats', 'Number of single seats should be 2 single seats'\n    assert bus_details[0]['fare'] == '\u20b9 750', 'Fare should be \u20b9 750'\n"
        },
        {
            "name": "test_sort_and_filter_buses",
            "description": "Verify sorting and filtering functionality",
            "code": "```python\ndef test_sort_and_filter_buses(self):\n    \"\"\"Verify sorting and filtering functionality\"\"\"\n    self.app.enter_source('Buldhana')\n    self.app.enter_destination('Pune')\n    self.app.select_journey_date('7 Sep')\n    self.app.tap_search_button()\n    self.app.tap_sort_and_filter_button()\n    assert self.app.is_sort_and_filter_menu_displayed(), 'Sort and filter menu should be displayed'\n    self.app.select_sort_option('Price (Low to High)')\n    bus_details = self.app.get_bus_details()\n    assert bus_details[0]['fare'] <= bus_details[1]['fare'], 'Bus list should be sorted in ascending order of price'\n    self.app.select_filter_option('AC')\n    assert self.app.is_ac_bus_displayed(), 'Only AC buses should be displayed after filtering'\n"
        },
        {
            "name": "test_select_bus_and_proceed_to_payment",
            "description": "Verify the user can select a bus and proceed to payment",
            "code": "```python\ndef test_select_bus_and_proceed_to_payment(self):\n    \"\"\"Verify the user can select a bus and proceed to payment\"\"\"\n    self.app.enter_source('Buldhana')\n    self.app.enter_destination('Pune')\n    self.app.select_journey_date('7 Sep')\n    self.app.tap_search_button()\n    self.app.select_bus_with_fare('\u20b9 750')\n    assert self.app.is_payment_screen_displayed(), 'Payment screen should be displayed after selecting a bus'\n"
        },
        {
            "name": "test_verify_promo_code_and_offers",
            "description": "Verify that the app displays promo codes and offers",
            "code": "```python\ndef test_verify_promo_code_and_offers(self):\n    \"\"\"Verify that the app displays promo codes and offers\"\"\"\n    assert self.app.is_promo_code_banner_displayed(), 'Promo code banner should be displayed'\n    assert self.app.is_offer_banner_displayed(), 'Offer banner should be displayed'\n    assert self.app.is_promo_code_banner_text_displayed(), 'Promo code banner text should be displayed'\n    assert self.app.is_offer_banner_text_displayed(), 'Offer banner text should be displayed'\n"
        }
    ]
}