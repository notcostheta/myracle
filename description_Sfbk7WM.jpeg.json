{
    "test_cases": [
        {
            "name": "test_enter_source_destination",
            "description": "Verify user can enter source and destination",
            "code": "```python\nimport pytest\n\nclass TestBusTickets:\n\n    @pytest.fixture(autouse=True)\n    def setup_method(self, MobileApp):\n        # Initialize the MobileApp object\n        self.app = MobileApp()\n\n    def test_enter_source_destination(self):\n        \"\"\"Verify user can enter source and destination\"\"\"\n        self.app.enter_source('Mumbai')\n        assert self.app.get_source_text() == 'Mumbai', \"Source should be Mumbai\"\n        self.app.enter_destination('Pune')\n        assert self.app.get_destination_text() == 'Pune', \"Destination should be Pune\"\n    \n```"
        },
        {
            "name": "test_select_journey_date",
            "description": "Verify user can select the journey date",
            "code": "```python\nimport pytest\n\nclass TestBusTickets:\n\n    @pytest.fixture(autouse=True)\n    def setup_method(self, MobileApp):\n        # Initialize the MobileApp object\n        self.app = MobileApp()\n\n    def test_select_journey_date(self):\n        \"\"\"Verify user can select the journey date\"\"\"\n        self.app.select_journey_date('Sat, 7 Sep')\n        assert self.app.get_selected_date() == 'Sat, 7 Sep', \"Selected date should be Sat, 7 Sep\"\n    \n```"
        },
        {
            "name": "test_tap_search_button",
            "description": "Verify user can tap the search button",
            "code": "```python\nimport pytest\n\nclass TestBusTickets:\n\n    @pytest.fixture(autouse=True)\n    def setup_method(self, MobileApp):\n        # Initialize the MobileApp object\n        self.app = MobileApp()\n\n    def test_tap_search_button(self):\n        \"\"\"Verify user can tap the search button\"\"\"\n        self.app.enter_source('Mumbai')\n        self.app.enter_destination('Pune')\n        self.app.select_journey_date('Sat, 7 Sep')\n        self.app.tap_search_button()\n        assert self.app.is_bus_list_displayed(), \"Bus list should be displayed after search\"\n    \n```"
        },
        {
            "name": "test_cab_bus_hire_navigation",
            "description": "Verify cab/bus hire functionality",
            "code": "```python\nimport pytest\n\nclass TestBusTickets:\n\n    @pytest.fixture(autouse=True)\n    def setup_method(self, MobileApp):\n        # Initialize the MobileApp object\n        self.app = MobileApp()\n\n    def test_cab_bus_hire_navigation(self):\n        \"\"\"Verify cab/bus hire functionality\"\"\"\n        self.app.tap_ryde_option()\n        assert self.app.is_cab_bus_hire_screen_displayed(), \"Cab/Bus hire screen should be displayed\"\n    \n```"
        },
        {
            "name": "test_offers_view_all",
            "description": "Verify user can view all offers",
            "code": "```python\nimport pytest\n\nclass TestBusTickets:\n\n    @pytest.fixture(autouse=True)\n    def setup_method(self, MobileApp):\n        # Initialize the MobileApp object\n        self.app = MobileApp()\n\n    def test_offers_view_all(self):\n        \"\"\"Verify user can view all offers\"\"\"\n        self.app.tap_view_all_offers()\n        assert self.app.is_offers_list_displayed(), \"Offers list should be displayed\"\n    \n```"
        },
        {
            "name": "test_home_navigation",
            "description": "Verify user can navigate to Home screen",
            "code": "```python\nimport pytest\n\nclass TestBusTickets:\n\n    @pytest.fixture(autouse=True)\n    def setup_method(self, MobileApp):\n        # Initialize the MobileApp object\n        self.app = MobileApp()\n\n    def test_home_navigation(self):\n        \"\"\"Verify user can navigate to Home screen\"\"\"\n        self.app.tap_home_button()\n        assert self.app.is_home_screen_displayed(), \"Home screen should be displayed\"\n    \n```"
        },
        {
            "name": "test_my_bookings_navigation",
            "description": "Verify user can navigate to My Bookings screen",
            "code": "```python\nimport pytest\n\nclass TestBusTickets:\n\n    @pytest.fixture(autouse=True)\n    def setup_method(self, MobileApp):\n        # Initialize the MobileApp object\n        self.app = MobileApp()\n\n    def test_my_bookings_navigation(self):\n        \"\"\"Verify user can navigate to My Bookings screen\"\"\"\n        self.app.tap_my_bookings_button()\n        assert self.app.is_my_bookings_screen_displayed(), \"My Bookings screen should be displayed\"\n    \n```"
        },
        {
            "name": "test_help_navigation",
            "description": "Verify user can navigate to Help screen",
            "code": "```python\nimport pytest\n\nclass TestBusTickets:\n\n    @pytest.fixture(autouse=True)\n    def setup_method(self, MobileApp):\n        # Initialize the MobileApp object\n        self.app = MobileApp()\n\n    def test_help_navigation(self):\n        \"\"\"Verify user can navigate to Help screen\"\"\"\n        self.app.tap_help_button()\n        assert self.app.is_help_screen_displayed(), \"Help screen should be displayed\"\n    \n```"
        },
        {
            "name": "test_my_account_navigation",
            "description": "Verify user can navigate to My Account screen",
            "code": "```python\nimport pytest\n\nclass TestBusTickets:\n\n    @pytest.fixture(autouse=True)\n    def setup_method(self, MobileApp):\n        # Initialize the MobileApp object\n        self.app = MobileApp()\n\n    def test_my_account_navigation(self):\n        \"\"\"Verify user can navigate to My Account screen\"\"\"\n        self.app.tap_my_account_button()\n        assert self.app.is_my_account_screen_displayed(), \"My Account screen should be displayed\"\n    \n```"
        }
    ]
}